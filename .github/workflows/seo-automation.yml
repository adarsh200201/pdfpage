name: 🚀 Automated SEO Optimization

on:
  # Run on pushes to main branch
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'public/**'
      - '*.html'
      - '*.tsx'
      - '*.jsx'
  
  # Run on pull requests
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'public/**'
      - '*.html'
      - '*.tsx'
      - '*.jsx'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      apply_changes:
        description: 'Apply SEO improvements to files'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  seo-analysis:
    name: 🔍 SEO Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'seo-automation/package-lock.json'
      
      - name: 🔧 Install SEO automation dependencies
        run: |
          cd seo-automation
          npm ci
      
      - name: 🧪 Run setup verification
        run: |
          cd seo-automation
          node verify-setup.js
      
      - name: 🔍 Run SEO analysis (safe mode)
        run: |
          cd seo-automation
          npm run seo-enhanced
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      
      - name: 📊 Upload SEO reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: seo-reports-${{ github.run_number }}
          path: |
            seo-automation/comprehensive-seo-report.json
            seo-automation/seo-report-readable.md
          retention-days: 30
      
      - name: 📋 Comment SEO results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const reportPath = path.join('seo-automation', 'seo-report-readable.md');
              if (fs.existsSync(reportPath)) {
                const report = fs.readFileSync(reportPath, 'utf8');
                const summary = report.substring(0, 2000) + (report.length > 2000 ? '\n\n...[truncated]' : '');
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `## 🔍 SEO Analysis Results\n\n${summary}\n\n📊 Full reports available in workflow artifacts.`
                });
              }
            } catch (error) {
              console.log('Could not post SEO results:', error);
            }

  seo-optimization:
    name: 🔧 SEO Optimization
    runs-on: ubuntu-latest
    needs: seo-analysis
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.apply_changes == 'true') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'seo-automation/package-lock.json'
      
      - name: 🔧 Install dependencies
        run: |
          cd seo-automation
          npm ci
      
      - name: 🚀 Apply SEO improvements
        run: |
          cd seo-automation
          npm run seo-enhanced-apply
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      
      - name: 📊 Check for changes
        id: changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "🔄 SEO improvements were applied"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "✅ No SEO changes needed"
          fi
      
      - name: 💾 Commit SEO improvements
        if: steps.changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "🔍 SEO: Automated optimization via Gemini AI
          
          - Applied comprehensive SEO improvements
          - Enhanced meta tags, headings, and content
          - Improved accessibility and performance
          - Generated by Enhanced SEO Automation
          
          Co-authored-by: Enhanced-SEO-Bot <seo-bot@pdfpage.in>"
      
      - name: 📤 Push changes
        if: steps.changes.outputs.changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      
      - name: 📊 Upload optimization reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: seo-optimization-reports-${{ github.run_number }}
          path: |
            seo-automation/comprehensive-seo-report.json
            seo-automation/seo-report-readable.md
            seo-automation/*.seo-backup
          retention-days: 30

  notification:
    name: 📢 Notification
    runs-on: ubuntu-latest
    needs: [seo-analysis, seo-optimization]
    if: always()
    
    steps:
      - name: 📊 Send success notification
        if: needs.seo-analysis.result == 'success'
        run: |
          echo "🎉 SEO automation completed successfully!"
          echo "📊 Reports generated and uploaded as artifacts"
          echo "🔍 Check the workflow summary for detailed results"
      
      - name: ⚠️ Send failure notification
        if: needs.seo-analysis.result == 'failure'
        run: |
          echo "❌ SEO automation failed"
          echo "🔧 Check the workflow logs for debugging information"
          echo "🔑 Verify GEMINI_API_KEY secret is properly set"
